$(document).ready(function () {
    //$("#TableDiv").hide();
    //$("#NodataContent").hide();
    //formPopup(country);
    var user = $("#reportuser").val();
    var reportDate = $("#reportDate").val();
    example(user, reportDate);
});

function accessLog() {
    // getJSON("/Country/Ajax_GetCountries", countries)

}



function example(user, reportDate) {

    var currentdate = new Date();
    var datetime = currentdate.getDate() + "/"
        + (currentdate.getMonth() + 1) + "/"
        + currentdate.getFullYear() + "@"
        + currentdate.getHours() + ":"
        + currentdate.getMinutes() + ":"
        + currentdate.getSeconds();

    

    var table = new DataTable('#example', {
        layout: {
            topStart: {
                // buttons: [ 'copyHtml5', 'excelHtml5', 'csvHtml5', 'pdfHtml5']

                buttons: [
                    {
                        extend: 'excelHtml5',
                        filename: "AccessLog_" + datetime,
                        title: "My Access Log Report",
                        //message: "Report Date:" + reportDate + "\n" + "\nReport Generated By:" + user + "\n",


                        customize: function (xlsx) {
                            var sheet = xlsx.xl.worksheets['sheet1.xml'];

                            // Find the <sheetData> and access the row nodes
                            var sheetData = $(sheet).find('sheetData');

                            $('row c', sheet).attr('s', '25');

                            var styles = xlsx.xl['styles.xml'];
                            var fonts = $('fonts', styles);
                            var newFontId = parseInt(fonts.attr('count'));
                            fonts.attr('count', newFontId + 1).append('<font><sz val="22"></sz><name val="Calibri"></name><b></b></font>');
                            var cellXfs = $('cellXfs', styles);
                            var newStyleId = parseInt(cellXfs.attr('count'));
                            cellXfs.attr('count', newStyleId + 1).append('<xf numFmtId="0" fontId="' + newFontId + '" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"></alignment></xf>');

                            var rowCount = 0;
                            $('row', sheet).each(function () {
                                var row = this;
                                if (rowCount == 0) {
                                    $('c[r="A1"]', row).attr('s', newStyleId);
                                }
                                rowCount++;
                            });

                            $('row c[r="A6"]', sheet).attr('s', '37');
                            $('row c[r="B6"]', sheet).attr('s', '37');
                            $('row c[r="C6"]', sheet).attr('s', '37');
                            $('row c[r="D6"]', sheet).attr('s', '37');
                            $('row c[r="E6"]', sheet).attr('s', '37');
                            $('row c[r="F6"]', sheet).attr('s', '37');

                        }

                    }, {
                        extend: 'pdfHtml5',
                        title: " ",
                        filename: "AccessLog_" + datetime,
                        orientation: 'landscape', //portrait
                        pageSize: 'A4', //A3 , A5 , A6 , legal , letter
                        exportOptions: {
                            columns: ':visible',
                            search: 'applied',
                            order: 'applied'
                        },
                        customize: function (doc) {

                            doc.pageMargins = [20, 60, 20, 30];
                            doc.defaultStyle.fontSize = 8;
                            doc.styles.tableHeader.fontSize = 10;

                            var now = new Date();
                            var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();

                            doc['header'] = (function () {
                                return {
                                    columns: [
                                        {
                                            alignment: 'center',
                                            fontSize: 14,
                                            text: 'My Access Log Report',
                                            bold: true
                                        }
                                    ],
                                    margin: 20
                                }
                            });


                            doc['footer'] = (function (page, pages) {
                                return {
                                    columns: [
                                        {
                                            alignment: 'right',
                                            text: ['page ', { text: page.toString() }, ' of ', { text: pages.toString() }]
                                        }
                                    ],
                                    margin: 20
                                }
                            });


                            doc.content[1].table.body[1][0].alignment = 'left';
                            doc.content[1].table.body[1][1].alignment = 'left';
                            doc.content[1].table.body[2][0].alignment = 'left';
                            doc.content[1].table.body[2][1].alignment = 'left';


                            doc.content[1].table.body[4][0].fillColor = '#FF8674';
                            doc.content[1].table.body[4][1].fillColor = '#FF8674';
                            doc.content[1].table.body[4][2].fillColor = '#FF8674';
                            doc.content[1].table.body[4][3].fillColor = '#FF8674';
                            doc.content[1].table.body[4][4].fillColor = '#FF8674';
                            doc.content[1].table.body[4][5].fillColor = '#FF8674';

                            doc.content[1].layout = "borders";

                            doc.content[1].table.body[0][0].border = [false, false, false, false];
                            doc.content[1].table.body[1][0].border = [false, false, false, false];
                            doc.content[1].table.body[1][1].border = [false, false, false, false];
                            doc.content[1].table.body[2][0].border = [false, false, false, false];
                            doc.content[1].table.body[2][1].border = [false, false, false, false];
                            doc.content[1].table.body[3][0].border = [false, false, false, false];

                            var objLayout = {};
                            objLayout['hLineWidth'] = function (i) { return .5; };
                            objLayout['vLineWidth'] = function (i) { return .5; };
                            objLayout['hLineColor'] = function (i) { return '#aaa'; };
                            objLayout['vLineColor'] = function (i) { return '#aaa'; };
                            objLayout['paddingLeft'] = function (i) { return 4; };
                            objLayout['paddingRight'] = function (i) { return 4; };

                            doc.content[0].layout = objLayout;
                        }
                    }

                    //'excelHtml5',//'csvHtml5',//'pdfHtml5'
                ]


            }
        }
    });
}

function addCustomFormat(xlsx) {
    // add a new "cellXfs" cell formatter, which uses the next available format index (numFmt 176):
    var celXfsElement = xlsx.xl['styles.xml'].getElementsByTagName('cellXfs');
    var cellStyle = '<xf numFmtId="176" fontId="0" fillId="0" borderId="0" xfId="0" applyAlignment="1"'
        + ' applyFont="4" applyFill="1" applyBorder="1"><alignment vertical="center"/></xf>';
    $(celXfsElement).append(cellStyle);
    $(celXfsElement).attr("count", "69"); // increment the count
}

function formatTargetColumn(xlsx, col) {
    var sheet = xlsx.xl.worksheets['sheet1.xml'];
    // select all the cells whose addresses start with the letter prvoided
    // in 'col', and add a style (s) attribute for style number 68:
    $('row c[r^="' + col + '"]', sheet).attr('s', '68');
}
